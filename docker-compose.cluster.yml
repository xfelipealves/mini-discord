version: '3.8'

services:
  scylla1:
    image: scylladb/scylla:5.2
    container_name: scylla1
    ports:
      - "9042:9042"
      - "9160:9160"
      - "10000:10000"
    command: >
      --seeds=scylla1,scylla2,scylla3
      --smp 2 
      --memory 750M 
      --overprovisioned 1 
      --api-address 0.0.0.0
    volumes:
      - scylla1-data:/var/lib/scylla
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - scylla-cluster

  scylla2:
    image: scylladb/scylla:5.2
    container_name: scylla2
    ports:
      - "9043:9042"
      - "9161:9160"
      - "10001:10000"
    command: >
      --seeds=scylla1,scylla2,scylla3
      --smp 2 
      --memory 750M 
      --overprovisioned 1 
      --api-address 0.0.0.0
    volumes:
      - scylla2-data:/var/lib/scylla
    depends_on:
      - scylla1
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - scylla-cluster

  scylla3:
    image: scylladb/scylla:5.2
    container_name: scylla3
    ports:
      - "9044:9042"
      - "9162:9160"
      - "10002:10000"
    command: >
      --seeds=scylla1,scylla2,scylla3
      --smp 2 
      --memory 750M 
      --overprovisioned 1 
      --api-address 0.0.0.0
    volumes:
      - scylla3-data:/var/lib/scylla
    depends_on:
      - scylla1
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - scylla-cluster

  scylla-cluster-init:
    image: scylladb/scylla:5.2
    container_name: scylla-cluster-init
    depends_on:
      scylla1:
        condition: service_healthy
      scylla2:
        condition: service_healthy
      scylla3:
        condition: service_healthy
    volumes:
      - ./docker/init-schema-cluster.cql:/init-schema-cluster.cql
    command: >
      sh -c "
        echo 'Waiting for cluster to be ready...' &&
        sleep 30 &&
        cqlsh scylla1 -f /init-schema-cluster.cql &&
        echo 'Cluster schema initialized successfully'
      "
    networks:
      - scylla-cluster

volumes:
  scylla1-data:
  scylla2-data:
  scylla3-data:

networks:
  scylla-cluster:
    driver: bridge